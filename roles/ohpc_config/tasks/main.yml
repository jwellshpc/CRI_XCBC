---

   - name: config warewulf interface
     lineinfile: dest=/etc/warewulf/provision.conf regexp="network device =" line="network device = {{ private_interface }}" 
#" for vim

   - name: enable tftp
     lineinfile: dest=/etc/xinetd.d/tftp regexp="^(\s+)disable(\s+)= yes" line="\1disable\2= no" backrefs=yes

   - name: enable httpd access to /srv/warewulf
     command: chcon -t httpd_sys_content_t -R /srv/warewulf
#       target: '/srv/warewulf(/.*)?'
#       setype: httpd_sys_content_t
#       state: present

#For compatibility with OpenXDMoD (use name-based vhost on the private ip only)
   - name: config warewulf http
     template: 
       src: warewulf-httpd.conf.j2
       dest: /etc/httpd/conf.d/warewulf-httpd.conf
     
   - name: reload xinetd
     service: name=xinetd state=restarted
 
   - name: enable mariadb
     service: name=mariadb enabled=yes
  
   - name: restart mariadb
     service: name=mariadb state=restarted

   - name: enable httpd
     service: name=httpd enabled=yes
  
   - name: restart httpd
     service: name=httpd state=restarted

   - name: exportfs home entry on headnode
     lineinfile: line="/home {{ private_network }}/{{ private_network_mask }}(rw,no_subtree_check,fsid=10,no_root_squash)" dest=/etc/exports state=present

   - name: exportfs opt entry on headnode
     lineinfile: line="/opt/ohpc/pub {{ private_network }}/{{ private_network_mask }}(ro,no_subtree_check,fsid=11)" dest=/etc/exports state=present

   - name: exportfs software dir entry on headnode
     lineinfile: line="/export {{ private_network }}/{{ private_network_mask }}(rw,no_subtree_check,fsid=12)" dest=/etc/exports state=present

   - name: exportfs reload
     command: exportfs -a

   - name: restart rpcbind
     service: name=rpcbind state=restarted enabled=yes
 
   - name: restart nfs-server
     service: name=nfs-server state=restarted enabled=yes

   - name: initialize database
     command: wwinit database

   - name: cluster ssh keys
     command: wwinit ssh_keys
     args:
       chdir: /root/
       creates: /etc/warewulf/vnfs/ssh/ssh_host_key.pub

#need to copy these to localhost first!
   - name: copy key back to management machine
     fetch:
       src: /root/.ssh/cluster.pub
       dest: ./cluster_root.pub
       flat: yes
